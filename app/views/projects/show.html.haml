#page.grid960
  .grid_7

    %h1= @project.name
    %h4= "#{@project.source_path} - #{@project.branch}"
    .clear

    = link_to 'Edit', edit_project_path(@project)
    |
    = link_to 'Back', projects_path
    .clear

    #project_status
    .job_count

  .grid_5
    %br
    %a{:class => 'command_link toggle_setup_commands'}
      %h5 Setup Commands
    .clear
    .setup_commands.hidden
      - @project.setup_commands.split("\n").each do |com|
        .command{"data-command" => com.inspect}
          = "#{ENV['USER']}@#{Socket.gethostname}:~$ #{com}"


    %a{:class => 'command_link toggle_update_commands'}
      %h5 Update Commands
    .clear
    .update_commands.hidden
      - @project.update_commands.split("\n").each do |com|
        .command{"data-command" => com.inspect}
          = "#{ENV['USER']}@#{Socket.gethostname}:~$ #{com}"




  .grid_12
    %h2 Actions
    - @project.actions.each do |action|
      .action{:class => "action_#{action.id}"}
        = render("actions/action", :action => action)




  .grid_12
    %a{:class => 'new_action_link', :href => '#'}
      %h4 Add Action
    .new_action.hidden
      = render("actions/form", :action => Action.new(:project_id => @project.id))
      .left
        = link_to_function("cancel", "$('.new_action').hide(); $('form#new_action_data :text').val('');")


  .grid_12


    %h2 Results



    #results_list
      .list_holder
        = render("results/list", :results => @project.results, :project => @project)

    = hidden_field_tag :last_result_id


:javascript
  var poller = undefined;
  var auto_close = {setup_commands: true, update_commands: true};

  $(function(){
    poll_for_status();

    $('.toggle_setup_commands').bind("click", function(){
      $('.setup_commands').toggle('fast');
      auto_close['setup_commands'] = false;
    });

    $('.toggle_update_commands').bind("click", function(){
      $('.update_commands').toggle('fast');
      auto_close['update_commands'] = false;
    });

    $('.new_action_link').bind("click", function(){
      $('.new_action').show('fast');
    })

  });

  function toggle_action_active(action_id){
    $.ajax({ url: "/actions/" + action_id, data: {action_id: action_id, toggle_active: true}, type: "PUT", dataType: 'text', success: function(data,textStatus){
        $('.action_'+ action_id).html(data);
      },
      error: function(r,t,e){
        alert(e)
        alert(r.responseText)
      }
    });
  };


  function poll_for_status(){

    $.ajax({ url: "/projects/#{@project.id}", data: {project_id: "#{@project.id}", get_status: true}, type: "GET", dataType: 'json', success: function(data,textStatus){


      if(data.job_count == 0){
        if($('.job_count').html() != ""){ poll_for_results() };
        $('.job_count').html("");

      }else{
        $('.job_count').html("Currently processing " + data.job_count + " actions....");
        poll_for_results()
      };

      $('.command').removeClass('current_command');
      if(data.initializing){
        $('.setup_commands').show('fast');
        $('.setup_commands').find(".command").each(function(){
          if($(this).data("command") == data.initializing ){ $(this).addClass("current_command") }
        });
        $('#project_status').html("Initializing project in <div class='small'>#{SimpleCi::WorkingDir}/project_#{h @project.id}</div>");

      }else if(data.updating){
        $('.update_commands').show('fast');
        $('.update_commands').find(".command").each(function(){
          if($(this).data("command") == data.updating ){ $(this).addClass("current_command") }
        });
        $('#project_status').html("Change detected, updating project");

      }else{
        $('#project_status').html("");
        if(auto_close['setup_commands'] == true){ $('.setup_commands').hide('fast'); };
        if(auto_close['update_commands'] == true){ $('.update_commands').hide('fast');};
      };

      poller = setTimeout(function(){ poll_for_status() }, 2000);

    },error: function(r,t,e){
      alert("error yo: " + e)
      alert(r.responseText)
    }})

  };


  function poll_for_results(){
    var last_result_id = $('#last_result_id').val();
    var data = {project_id: "#{@project.id}", last_result_id: last_result_id}

    if(last_result_id != undefined){

      $.ajax({ url: "/results", data: data, type: "GET", dataType: 'html', success: function(data,textStatus){
        if(data != ""){
          $('#results_list').prepend("<div class='list_holder hidden'></div>")
          $('.list_holder').removeClass("lastest_result")
          if( $('.list_holder').size() ==  1){
            $('.list_holder').html(data);
            $('.list_holder').show('fast')
            $('.list_holder').addClass("lastest_result")
          }else{
            $('.list_holder:first').html(data);
            $('.list_holder:first').show('fast')
            $('.list_holder:first').addClass("lastest_result")
          };
        };

        //poller = setTimeout(function(){ poll_for_results() }, 5000);
      }, error: function(r,t,e){
        alert(e)
        alert(r.responseText)
      }});
    };


  };

  function remove_existing_commit(commit_id){
    $("." + commit_id + ":not(:first)").remove();
  };

  function toggle_these_results(e){
    $(e).parents('.results').find('.result_data').toggle('fast')
  };
