#page.grid960
  .grid_12
    %p#notice= notice


    %h1= @project.name
    %p
      .value= @project.source_path
      .value= @project.branch

      %h5 Setup Commands
      - @project.setup_commands.split("\n").each do |com|
        .value
        = "#{ENV['USER']}@#{Socket.gethostname}:~$ #{com}"

      %h5 Update Commands
      - @project.update_commands.split("\n").each do |com|
        .value
        = "#{ENV['USER']}@#{Socket.gethostname}:~$ #{com}"



    = link_to 'Edit', edit_project_path(@project)
    |
    = link_to 'Back', projects_path

  .grid_12
    %h2 Actions
    - @project.actions.each do |action|
      .left= action.command
      .right= link_to 'Destroy', action, :confirm => 'Are you sure?', :method => :delete
      .clear

  .grid_12
    %h4 Add Action
    = render("actions/form", :action => Action.new(:project_id => @project.id))

  .grid_12

    %h2 Results
    #job_count

    #results_list
      .list_holder
        = render("results/list", :results => @project.results, :project => @project)

    = hidden_field_tag :last_result_id


:javascript
  var poller = undefined;

  $(function(){ poll() });

  function poll(){
    var last_result_id = $('#last_result_id').val();
    var data = {project_id: "#{@project.id}", last_result_id: last_result_id}

    $.ajax({ url: "/projects/#{@project.id}", data: {get_job_count: true}, type: "GET", dataType: 'script', success: function(data,textStatus){
      if(parseInt(data) == 0){
        $('#job_count').html("");
      }else{
        $('#job_count').html("Currently processing " + data + " actions....");
      };
    },error: function(r,t,e){
      alert(e)
      alert(r.responseText)
    }})


    if(last_result_id != undefined){

      $.ajax({ url: "/results", data: data, type: "GET", dataType: 'html', success: function(data,textStatus){
        if(data != ""){
          $('#results_list').prepend("<div class='list_holder hidden'></div>")
          $('.list_holder').removeClass("lastest_result")
          if( $('.list_holder').size() ==  1){
            $('.list_holder').html(data);
            $('.list_holder').show('fast')
            $('.list_holder').addClass("lastest_result")
          }else{
            $('.list_holder:first').html(data);
            $('.list_holder:first').show('fast')
            $('.list_holder:first').addClass("lastest_result")
          };
        };

        poller = setTimeout(function(){ poll() }, 5000);
      }, error: function(r,t,e){
        alert(e)
        alert(r.responseText)
      }});
    };


  };

  function remove_existing_commit(commit_id){
    $("." + commit_id + ":not(:first)").remove();
  };

  function toggle_these_results(e){
    $(e).parents('.results').find('.result_data').toggle('fast')
  };
